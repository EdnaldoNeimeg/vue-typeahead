{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap b8d1a2156ae149f7dfce","webpack:///./demo/main.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/core-js/library/modules/_defined.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_iobject.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///./~/core-js/library/modules/_to-integer.js","webpack:///./~/core-js/library/modules/_to-iobject.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./src/main.js","webpack:///Typeahead.vue","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/helpers/defineProperty.js","webpack:///./~/core-js/library/fn/object/assign.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_array-includes.js","webpack:///./~/core-js/library/modules/_cof.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_enum-bug-keys.js","webpack:///./~/core-js/library/modules/_has.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_object-assign.js","webpack:///./~/core-js/library/modules/_object-gops.js","webpack:///./~/core-js/library/modules/_object-keys-internal.js","webpack:///./~/core-js/library/modules/_object-keys.js","webpack:///./~/core-js/library/modules/_object-pie.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_shared-key.js","webpack:///./~/core-js/library/modules/_shared.js","webpack:///./~/core-js/library/modules/_to-index.js","webpack:///./~/core-js/library/modules/_to-length.js","webpack:///./~/core-js/library/modules/_to-object.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/_uid.js","webpack:///./~/core-js/library/modules/es6.object.assign.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./demo/Typeahead.vue?a371","webpack:///./~/css-loader/lib/css-base.js","webpack:///./demo/Typeahead.vue?e8cd","webpack:///./demo/Typeahead.vue","webpack:///./~/vue-resource/dist/vue-resource.common.js","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./demo/Typeahead.vue?525d"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueResource","_vueResource2","_Typeahead","_Typeahead2","use","el","components","Typeahead","Object","defineProperty","get","a","core","version","__e","exec","e","global","window","Math","self","Function","__g","it","undefined","TypeError","ctx","hide","PROTOTYPE","$export","type","name","source","key","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","expProto","target","C","b","this","arguments","length","apply","virtual","R","U","cof","propertyIsEnumerable","split","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","value","ceil","floor","isNaN","IObject","defined","set","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","toBoolean","stripQuotes","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","l","toArray","list","start","ret","Array","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","isNative","Ctor","Cache","limit","size","head","tail","_keymap","create","peek","index","next","eof","len","eatSpace","spaceChr","isStringStart","chr","doubleChr","singleChr","isExpStart","expStartChr","isExpEnd","expChrPair","parseString","stringQuote","escapeChr","parseSpecialExp","inExp","startChr","parseExpression","pipeChr","state","startState","filterArgState","filterState","filterNameState","parseFilterList","filters","push","parseFilter","filter","trim","parseFilterArguments","arg","processFilterArg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","dir","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","match","html","first","oneTime","tokens","lastIndex","tag","tokensToExp","map","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","props","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","prototype","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression$1","setPath","original","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","range","n","getTrackByKey","trackByKey","findVmFromFrag","__vue__","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","propsData","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sortDirectives","_bind","j","groupedMap","priorities","priority","descriptor","DEFAULT_PRIORITY","array","sort","group","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","skip","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","prev","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIOS","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","resolve","then","MutationObserver","counter","observer","textNode","characterData","Set","entry","shift","newer","older","returnEntry","91","123","40","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","_defineProperty2","_defineProperty3","_assign","_assign2","loading","selectFirst","queryParamName","timer","hasItems","isEmpty","isDirty","clearTimeout","fireFetch","minChars","fetch","response","prepareResponseData","$http","setActive","activeClass","onHit","_main","_main2","extends","location","href","screen_name","_defineProperty","assign","$Object","desc","toIObject","toLength","toIndex","IS_INCLUDES","$this","fromIndex","aFunction","that","createDesc","object","getKeys","gOPS","pIE","toObject","$assign","A","Symbol","K","T","aLen","getSymbols","isEnum","getOwnPropertySymbols","arrayIndexOf","IE_PROTO","$keys","enumBugKeys","bitmap","shared","SHARED","store","toInteger","max","min","valueOf","px","random","mediaQuery","alreadyImportedModules","__vue_script__","__vue_template__","__vue_styles__","__vue_options__","Promise$1","executor","PENDING","deferred","promise","x","r","reject","PromiseObj","msg","error","toLower","isFunction","getPrototypeOf","isBlob","Blob","isFormData","FormData","when","fulfilled","rejected","opts","merge","$vm","each","_merge","defaults","expand","url","variables","tmpl","expanded","vars","operators","operator","values","substr","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURIComponent","part","encodeURI","Url","transform","options$$1","transforms","serialize","plain","isJson","{","sendRequest","request","client","xhrClient","nodeClient","getName","curr","normalizeName","blobText","reader","FileReader","readAsText","onload","isBlobText","Http","Client","interceptors","Request","ok","Error","Resource","resource","Util","http","$url","$resource","$promise","this$1","RESOLVED","REJECTED","all","iterable","resolver","race","onResolved","onRejected","catch","finally","callback","ref$1","root","urlParams","escape","documentMode","protocol","port","hostname","pathname","xdrClient","xdr","XDomainRequest","status","respondWith","responseText","abort","getUrl","onabort","onerror","ontimeout","onprogress","send","getBody","SUPPORTS_CORS","XMLHttpRequest","cors","orgUrl","reqUrl","crossOrigin","emulateHTTP","headers","emulateJSON","bodyText","jsonpClient","script","jsonp","jsonpCallback","header","common","custom","SUPPORTS_BLOB","xhr","statusText","getAllResponseHeaders","row","progress","upload","credentials","withCredentials","responseType","setRequestHeader","resp","statusCode","statusMessage","error$$1","reqHandlers","pop","resHandlers","Headers","getAll","deleteAll","thisArg","Response","bodyBlob","blob","COMMON_HEADERS","Accept","JSON_CONTENT_TYPE","Content-Type","post","patch","method$$1","body$$1","addStylesToDom","styles","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","media","sourceMap","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","sources","btoa","unescape","memoize","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","locals"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/build/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(12);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueResource = __webpack_require__(49);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _Typeahead = __webpack_require__(48);\n\t\n\tvar _Typeahead2 = _interopRequireDefault(_Typeahead);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueResource2.default);\n\t\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: {\n\t    Typeahead: _Typeahead2.default\n\t  }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(3)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '2.4.0'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(4)\n\t  , core      = __webpack_require__(2)\n\t  , ctx       = __webpack_require__(24)\n\t  , hide      = __webpack_require__(28)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , expProto  = exports[PROTOTYPE]\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(a, b, c){\n\t        if(this instanceof C){\n\t          switch(arguments.length){\n\t            case 0: return new C;\n\t            case 1: return new C(a);\n\t            case 2: return new C(a, b);\n\t          } return new C(a, b, c);\n\t        } return C.apply(this, arguments);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\t    if(IS_PROTO){\n\t      (exports.virtual || (exports.virtual = {}))[key] = out;\n\t      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\t      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n\t    }\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;   // forced\n\t$export.G = 2;   // global\n\t$export.S = 4;   // static\n\t$export.P = 8;   // proto\n\t$export.B = 16;  // bind\n\t$export.W = 32;  // wrap\n\t$export.U = 64;  // safe\n\t$export.R = 128; // real proto method for `library` \n\tmodule.exports = $export;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(23);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar anObject       = __webpack_require__(21)\n\t  , IE8_DOM_DEFINE = __webpack_require__(29)\n\t  , toPrimitive    = __webpack_require__(41)\n\t  , dP             = Object.defineProperty;\n\t\n\texports.f = __webpack_require__(1) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if(IE8_DOM_DEFINE)try {\n\t    return dP(O, P, Attributes);\n\t  } catch(e){ /* empty */ }\n\t  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n\t  if('value' in Attributes)O[P] = Attributes.value;\n\t  return O;\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __webpack_require__(8)\n\t  , defined = __webpack_require__(6);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v1.0.28\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delimited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([^-])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/* istanbul ignore next */\n\tfunction isNative(Ctor) {\n\t  return (/native code/.test(Ctor.toString())\n\t  );\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc = undefined;\n\t\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks.length = 0;\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  // the nextTick behavior leverages the microtask queue, which can be accessed\n\t  // via either native Promise.then or MutationObserver.\n\t  // MutationObserver has wider support, however it is seriously bugged in\n\t  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n\t  // completely stops working after triggering a few times... so, if native\n\t  // Promise is available, we will use it:\n\t  /* istanbul ignore if */\n\t  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n\t    var p = Promise.resolve();\n\t    var noop = function noop() {};\n\t    timerFunc = function () {\n\t      p.then(nextTickHandler);\n\t      // in problematic UIWebViews, Promise.then doesn't completely break, but\n\t      // it can get stuck in a weird state where callbacks are pushed into the\n\t      // microtask queue but the queue isn't being flushed, until the browser\n\t      // needs to do some other work, e.g. handle a timer. Therefore we can\n\t      // \"force\" the microtask queue to be flushed by adding an empty timer.\n\t      if (isIOS) setTimeout(noop);\n\t    };\n\t  } else if (typeof MutationObserver !== 'undefined') {\n\t    // use MutationObserver where native Promise is not available,\n\t    // e.g. IE11, iOS7, Android 4.4\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(String(counter));\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = String(counter);\n\t    };\n\t  } else {\n\t    // fallback to setTimeout\n\t    /* istanbul ignore next */\n\t    timerFunc = setTimeout;\n\t  }\n\t\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && isNative(Set)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar len;\n\tvar index;\n\tvar chr;\n\tvar state;\n\tvar startState = 0;\n\tvar filterState = 1;\n\tvar filterNameState = 2;\n\tvar filterArgState = 3;\n\t\n\tvar doubleChr = 0x22;\n\tvar singleChr = 0x27;\n\tvar pipeChr = 0x7C;\n\tvar escapeChr = 0x5C;\n\tvar spaceChr = 0x20;\n\t\n\tvar expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };\n\tvar expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };\n\t\n\tfunction peek() {\n\t  return str.charCodeAt(index + 1);\n\t}\n\t\n\tfunction next() {\n\t  return str.charCodeAt(++index);\n\t}\n\t\n\tfunction eof() {\n\t  return index >= len;\n\t}\n\t\n\tfunction eatSpace() {\n\t  while (peek() === spaceChr) {\n\t    next();\n\t  }\n\t}\n\t\n\tfunction isStringStart(chr) {\n\t  return chr === doubleChr || chr === singleChr;\n\t}\n\t\n\tfunction isExpStart(chr) {\n\t  return expStartChr[chr];\n\t}\n\t\n\tfunction isExpEnd(start, chr) {\n\t  return expChrPair[start] === chr;\n\t}\n\t\n\tfunction parseString() {\n\t  var stringQuote = next();\n\t  var chr;\n\t  while (!eof()) {\n\t    chr = next();\n\t    // escape char\n\t    if (chr === escapeChr) {\n\t      next();\n\t    } else if (chr === stringQuote) {\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseSpecialExp(chr) {\n\t  var inExp = 0;\n\t  var startChr = chr;\n\t\n\t  while (!eof()) {\n\t    chr = peek();\n\t    if (isStringStart(chr)) {\n\t      parseString();\n\t      continue;\n\t    }\n\t\n\t    if (startChr === chr) {\n\t      inExp++;\n\t    }\n\t    if (isExpEnd(startChr, chr)) {\n\t      inExp--;\n\t    }\n\t\n\t    next();\n\t\n\t    if (inExp === 0) {\n\t      break;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * syntax:\n\t * expression | filterName  [arg  arg [| filterName arg arg]]\n\t */\n\t\n\tfunction parseExpression() {\n\t  var start = index;\n\t  while (!eof()) {\n\t    chr = peek();\n\t    if (isStringStart(chr)) {\n\t      parseString();\n\t    } else if (isExpStart(chr)) {\n\t      parseSpecialExp(chr);\n\t    } else if (chr === pipeChr) {\n\t      next();\n\t      chr = peek();\n\t      if (chr === pipeChr) {\n\t        next();\n\t      } else {\n\t        if (state === startState || state === filterArgState) {\n\t          state = filterState;\n\t        }\n\t        break;\n\t      }\n\t    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {\n\t      eatSpace();\n\t      break;\n\t    } else {\n\t      if (state === filterState) {\n\t        state = filterNameState;\n\t      }\n\t      next();\n\t    }\n\t  }\n\t\n\t  return str.slice(start + 1, index) || null;\n\t}\n\t\n\tfunction parseFilterList() {\n\t  var filters = [];\n\t  while (!eof()) {\n\t    filters.push(parseFilter());\n\t  }\n\t  return filters;\n\t}\n\t\n\tfunction parseFilter() {\n\t  var filter = {};\n\t  var args;\n\t\n\t  state = filterState;\n\t  filter.name = parseExpression().trim();\n\t\n\t  state = filterArgState;\n\t  args = parseFilterArguments();\n\t\n\t  if (args.length) {\n\t    filter.args = args;\n\t  }\n\t  return filter;\n\t}\n\t\n\tfunction parseFilterArguments() {\n\t  var args = [];\n\t  while (!eof() && state !== filterState) {\n\t    var arg = parseExpression();\n\t    if (!arg) {\n\t      break;\n\t    }\n\t    args.push(processFilterArg(arg));\n\t  }\n\t\n\t  return args;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  dir = {};\n\t  len = str.length;\n\t  index = -1;\n\t  chr = '';\n\t  state = startState;\n\t\n\t  var filters;\n\t\n\t  if (str.indexOf('|') < 0) {\n\t    dir.expression = str.trim();\n\t  } else {\n\t    dir.expression = parseExpression().trim();\n\t    filters = parseFilterList();\n\t    if (filters.length) {\n\t      dir.filters = filters;\n\t    }\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIOS: isIOS,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to register itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression$1(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression$1(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression$1(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression$1,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression$1(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    if (false) {\n\t      warn('<' + this.el.tagName.toLowerCase() + ' v-for=\"' + this.expression + '\" v-if=\"' + this.el.getAttribute('v-if') + '\">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);\n\t    }\n\t\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new instance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.get();\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        var i = indexOf(model, val);\n\t        if (el.checked) {\n\t          if (i < 0) {\n\t            self.set(model.concat(val));\n\t          }\n\t        } else if (i > -1) {\n\t          self.set(model.slice(0, i).concat(model.slice(i + 1)));\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// logic control\n\t// two-way binding\n\t// event handling\n\t// attributes\n\t// ref & el\n\t// cloak\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var propsData = vm.$options.propsData;\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {\n\t      // has propsData\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  sortDirectives(dirs);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * sort directives by priority (stable sort)\n\t *\n\t * @param {Array} dirs\n\t */\n\tfunction sortDirectives(dirs) {\n\t  if (dirs.length === 0) return;\n\t\n\t  var groupedMap = {};\n\t  var i, j, k, l;\n\t  var index = 0;\n\t  var priorities = [];\n\t  for (i = 0, j = dirs.length; i < j; i++) {\n\t    var dir = dirs[i];\n\t    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    var array = groupedMap[priority];\n\t    if (!array) {\n\t      array = groupedMap[priority] = [];\n\t      priorities.push(priority);\n\t    }\n\t    array.push(dir);\n\t  }\n\t\n\t  priorities.sort(function (a, b) {\n\t    return a > b ? -1 : a === b ? 0 : 1;\n\t  });\n\t  for (i = 0, j = priorities.length; i < j; i++) {\n\t    var group = groupedMap[priorities[i]];\n\t    for (k = 0, l = group.length; k < l; k++) {\n\t      dirs[index++] = group[k];\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t\n\t      var componentName = options.el.tagName.toLowerCase();\n\t      if (componentName === 'component' && options.name) {\n\t        componentName += ':' + options.name;\n\t      }\n\t\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    // a textarea which has v-pre attr should skip complie.\n\t    if (getAttr(el, 'v-pre') !== null) {\n\t      return skip;\n\t    }\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for, v-if and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    if (!replacer) {\n\t      return frag;\n\t    }\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression$1(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression$1(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression$1(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Order filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.28';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(17);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _assign = __webpack_require__(15);\n\t\n\tvar _assign2 = _interopRequireDefault(_assign);\n\t\n\tvar _vue = __webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: ['debounce'],\n\t  data: function data() {\n\t    return {\n\t      items: [],\n\t      query: '',\n\t      current: -1,\n\t      loading: false,\n\t      selectFirst: false,\n\t      queryParamName: 'q',\n\t      timer: null\n\t    };\n\t  },\n\t\n\t\n\t  computed: {\n\t    hasItems: function hasItems() {\n\t      return this.items.length > 0;\n\t    },\n\t    isEmpty: function isEmpty() {\n\t      return !this.query;\n\t    },\n\t    isDirty: function isDirty() {\n\t      return !!this.query;\n\t    }\n\t  },\n\t\n\t  methods: {\n\t    update: function update() {\n\t      var th = this;\n\t      this.loading = true;\n\t      if (this.debounce > 0) {\n\t        if (this.timer != null) {\n\t          clearTimeout(this.timer);\n\t        }\n\t        this.timer = setTimeout(function () {\n\t          th.fireFetch();\n\t        }, th.debounce);\n\t      } else {\n\t        this.fireFetch();\n\t      }\n\t    },\n\t    fireFetch: function fireFetch() {\n\t      var _this = this;\n\t\n\t      if (!this.query) {\n\t        this.loading = false;\n\t        return this.reset();\n\t      }\n\t\n\t      if (this.minChars && this.query.length < this.minChars) {\n\t        this.loading = false;\n\t        return;\n\t      }\n\t\n\t      this.fetch().then(function (response) {\n\t        if (_this.query) {\n\t          var data = response.data;\n\t          data = _this.prepareResponseData ? _this.prepareResponseData(data) : data;\n\t          _this.items = _this.limit ? data.slice(0, _this.limit) : data;\n\t          _this.current = -1;\n\t          _this.loading = false;\n\t\n\t          if (_this.selectFirst) {\n\t            _this.down();\n\t          }\n\t        }\n\t      });\n\t    },\n\t    fetch: function fetch() {\n\t      if (!this.$http) {\n\t        return _vue.util.warn('You need to install the `vue-resource` plugin', this);\n\t      }\n\t\n\t      if (!this.src) {\n\t        return _vue.util.warn('You need to set the `src` property', this);\n\t      }\n\t\n\t      var src = this.queryParamName ? this.src : this.src + this.query;\n\t\n\t      var params = this.queryParamName ? (0, _assign2.default)((0, _defineProperty3.default)({}, this.queryParamName, this.query), this.data) : this.data;\n\t\n\t      return this.$http.get(src, { params: params });\n\t    },\n\t    reset: function reset() {\n\t      this.items = [];\n\t      this.query = '';\n\t      this.loading = false;\n\t    },\n\t    setActive: function setActive(index) {\n\t      this.current = index;\n\t    },\n\t    activeClass: function activeClass(index) {\n\t      return {\n\t        active: this.current === index\n\t      };\n\t    },\n\t    hit: function hit() {\n\t      if (this.current !== -1) {\n\t        this.onHit(this.items[this.current]);\n\t      }\n\t    },\n\t    up: function up() {\n\t      if (this.current > 0) {\n\t        this.current--;\n\t      } else if (this.current === -1) {\n\t        this.current = this.items.length - 1;\n\t      } else {\n\t        this.current = -1;\n\t      }\n\t    },\n\t    down: function down() {\n\t      if (this.current < this.items.length - 1) {\n\t        this.current++;\n\t      } else {\n\t        this.current = -1;\n\t      }\n\t    },\n\t    onHit: function onHit() {\n\t      _vue.util.warn('You need to implement the `onHit` method', this);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _main = __webpack_require__(13);\n\t\n\tvar _main2 = _interopRequireDefault(_main);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  extends: _main2.default,\n\t\n\t  data: function data() {\n\t    return {\n\t      src: 'https://typeahead-js-twitter-api-proxy.herokuapp.com/demo/search',\n\t      limit: 5,\n\t      minChars: 3\n\t    };\n\t  },\n\t\n\t\n\t  methods: {\n\t    onHit: function onHit(item) {\n\t      window.location.href = 'http://twitter.com/' + item.screen_name;\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(18), __esModule: true };\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(19), __esModule: true };\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _defineProperty = __webpack_require__(16);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (obj, key, value) {\n\t  if (key in obj) {\n\t    (0, _defineProperty2.default)(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\t\n\t  return obj;\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(43);\n\tmodule.exports = __webpack_require__(2).Object.assign;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(44);\n\tvar $Object = __webpack_require__(2).Object;\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $Object.defineProperty(it, key, desc);\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(5);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// false -> Array#indexOf\n\t// true  -> Array#includes\n\tvar toIObject = __webpack_require__(11)\n\t  , toLength  = __webpack_require__(39)\n\t  , toIndex   = __webpack_require__(38);\n\tmodule.exports = function(IS_INCLUDES){\n\t  return function($this, el, fromIndex){\n\t    var O      = toIObject($this)\n\t      , length = toLength(O.length)\n\t      , index  = toIndex(fromIndex, length)\n\t      , value;\n\t    // Array#includes uses SameValueZero equality algorithm\n\t    if(IS_INCLUDES && el != el)while(length > index){\n\t      value = O[index++];\n\t      if(value != value)return true;\n\t    // Array#toIndex ignores holes, Array#includes - not\n\t    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n\t      if(O[index] === el)return IS_INCLUDES || index || 0;\n\t    } return !IS_INCLUDES && -1;\n\t  };\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(20);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(5)\n\t  , document = __webpack_require__(4).document\n\t  // in old IE typeof document.createElement is 'object'\n\t  , is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function(it){\n\t  return is ? document.createElement(it) : {};\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t// IE 8- don't enum bug keys\n\tmodule.exports = (\n\t  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n\t).split(',');\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dP         = __webpack_require__(9)\n\t  , createDesc = __webpack_require__(35);\n\tmodule.exports = __webpack_require__(1) ? function(object, key, value){\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = !__webpack_require__(1) && !__webpack_require__(3)(function(){\n\t  return Object.defineProperty(__webpack_require__(25)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar getKeys  = __webpack_require__(33)\n\t  , gOPS     = __webpack_require__(31)\n\t  , pIE      = __webpack_require__(34)\n\t  , toObject = __webpack_require__(40)\n\t  , IObject  = __webpack_require__(8)\n\t  , $assign  = Object.assign;\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = !$assign || __webpack_require__(3)(function(){\n\t  var A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , aLen  = arguments.length\n\t    , index = 1\n\t    , getSymbols = gOPS.f\n\t    , isEnum     = pIE.f;\n\t  while(aLen > index){\n\t    var S      = IObject(arguments[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  } return T;\n\t} : $assign;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\texports.f = Object.getOwnPropertySymbols;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar has          = __webpack_require__(27)\n\t  , toIObject    = __webpack_require__(11)\n\t  , arrayIndexOf = __webpack_require__(22)(false)\n\t  , IE_PROTO     = __webpack_require__(36)('IE_PROTO');\n\t\n\tmodule.exports = function(object, names){\n\t  var O      = toIObject(object)\n\t    , i      = 0\n\t    , result = []\n\t    , key;\n\t  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n\t  // Don't enum bug & hidden keys\n\t  while(names.length > i)if(has(O, key = names[i++])){\n\t    ~arrayIndexOf(result, key) || result.push(key);\n\t  }\n\t  return result;\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\tvar $keys       = __webpack_require__(32)\n\t  , enumBugKeys = __webpack_require__(26);\n\t\n\tmodule.exports = Object.keys || function keys(O){\n\t  return $keys(O, enumBugKeys);\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\texports.f = {}.propertyIsEnumerable;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar shared = __webpack_require__(37)('keys')\n\t  , uid    = __webpack_require__(42);\n\tmodule.exports = function(key){\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(4)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(10)\n\t  , max       = Math.max\n\t  , min       = Math.min;\n\tmodule.exports = function(index, length){\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(10)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(6);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.1 ToPrimitive(input [, PreferredType])\n\tvar isObject = __webpack_require__(5);\n\t// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n\t// and the second argument - flag - preferred type is a string\n\tmodule.exports = function(it, S){\n\t  if(!isObject(it))return it;\n\t  var fn, val;\n\t  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(7);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(30)});\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $export = __webpack_require__(7);\n\t// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n\t$export($export.S + $export.F * !__webpack_require__(1), 'Object', {defineProperty: __webpack_require__(9).f});\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(46)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".Typeahead[_v-3de1d046]{position:relative}.Typeahead__input[_v-3de1d046]{width:100%;font-size:14px;color:#2c3e50;line-height:1.42857143;box-shadow:inset 0 1px 4px rgba(0,0,0,.4);-webkit-transition:border-color .15s ease-in-out,-webkit-box-shadow .15s ease-in-out;-webkit-transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;font-weight:300;padding:12px 26px;border:none;border-radius:22px;letter-spacing:1px;box-sizing:border-box}.Typeahead__input[_v-3de1d046]:focus{border-color:#4fc08d;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px #4fc08d}.fa-times[_v-3de1d046]{cursor:pointer}i[_v-3de1d046]{float:right;position:relative;top:30px;right:29px;opacity:.4}ul[_v-3de1d046]{position:absolute;padding:0;margin-top:8px;min-width:100%;background-color:#fff;list-style:none;border-radius:4px;box-shadow:0 0 10px rgba(0,0,0,.25);z-index:1000}li[_v-3de1d046]{padding:10px 16px;border-bottom:1px solid #ccc;cursor:pointer}li[_v-3de1d046]:first-child{border-top-left-radius:4px;border-top-right-radius:4px}li[_v-3de1d046]:last-child{border-bottom-left-radius:4px;border-bottom-right-radius:4px;border-bottom:0}span[_v-3de1d046]{display:block;color:#2c3e50}.active[_v-3de1d046]{background-color:#3aa373}.active span[_v-3de1d046]{color:#fff}.name[_v-3de1d046]{font-weight:700;font-size:18px}.screen-name[_v-3de1d046]{font-style:italic}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=Typeahead _v-3de1d046=\\\"\\\"> <i class=\\\"fa fa-spinner fa-spin\\\" v-if=loading _v-3de1d046=\\\"\\\"></i> <template v-else=\\\"\\\"> <i class=\\\"fa fa-search\\\" v-show=isEmpty _v-3de1d046=\\\"\\\"></i> <i class=\\\"fa fa-times\\\" v-show=isDirty @click=reset _v-3de1d046=\\\"\\\"></i> </template> <input type=text class=Typeahead__input placeholder=\\\"Search twitter user\\\" autocomplete=off v-model=query @keydown.down=down @keydown.up=up @keydown.enter=hit @keydown.esc=reset @blur=reset @input=update _v-3de1d046=\\\"\\\"> <ul v-show=hasItems _v-3de1d046=\\\"\\\"> <li v-for=\\\"item in items\\\" :class=activeClass($index) @mousedown=hit @mousemove=setActive($index) _v-3de1d046=\\\"\\\"> <span class=name v-text=item.name _v-3de1d046=\\\"\\\"></span> <span class=screen-name v-text=item.screen_name _v-3de1d046=\\\"\\\"></span> </li> </ul> </div> \";\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__webpack_require__(51)\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(47)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-resource v1.2.0\n\t * https://github.com/pagekit/vue-resource\n\t * Released under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING  = 2;\n\t\n\tfunction Promise$1(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise$1.reject = function (r) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise$1.resolve = function (x) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise$1.all = function all(iterable) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        var count = 0, result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise$1.race = function race(iterable) {\n\t    return new Promise$1(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise$1.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p$1 = Promise$1.prototype;\n\t\n\tp$1.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp$1.notify = function notify() {\n\t    var promise = this;\n\t\n\t    nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp$1.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise$1(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp$1.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tif (typeof Promise === 'undefined') {\n\t    window.Promise = Promise$1;\n\t}\n\t\n\tfunction PromiseObj(executor, context) {\n\t\n\t    if (executor instanceof Promise) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new Promise(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromiseObj.all = function (iterable, context) {\n\t    return new PromiseObj(Promise.all(iterable), context);\n\t};\n\t\n\tPromiseObj.resolve = function (value, context) {\n\t    return new PromiseObj(Promise.resolve(value), context);\n\t};\n\t\n\tPromiseObj.reject = function (reason, context) {\n\t    return new PromiseObj(Promise.reject(reason), context);\n\t};\n\t\n\tPromiseObj.race = function (iterable, context) {\n\t    return new PromiseObj(Promise.race(iterable), context);\n\t};\n\t\n\tvar p = PromiseObj.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    return new PromiseObj(this.promise.catch(rejected), this.context);\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t            callback.call(this);\n\t            return value;\n\t        }, function (reason) {\n\t            callback.call(this);\n\t            return Promise.reject(reason);\n\t        }\n\t    );\n\t};\n\t\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar debug = false;\n\tvar util = {};\n\tvar ref = {};\n\tvar hasOwnProperty = ref.hasOwnProperty;\n\t\n\tvar ref$1 = [];\n\tvar slice = ref$1.slice;\n\t\n\tvar inBrowser = typeof window !== 'undefined';\n\t\n\tvar Util = function (Vue) {\n\t    util = Vue.util;\n\t    debug = Vue.config.debug || !Vue.config.silent;\n\t};\n\t\n\tfunction warn(msg) {\n\t    if (typeof console !== 'undefined' && debug) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t}\n\t\n\tfunction error(msg) {\n\t    if (typeof console !== 'undefined') {\n\t        console.error(msg);\n\t    }\n\t}\n\t\n\tfunction nextTick(cb, ctx) {\n\t    return util.nextTick(cb, ctx);\n\t}\n\t\n\tfunction trim(str) {\n\t    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n\t}\n\t\n\tfunction toLower(str) {\n\t    return str ? str.toLowerCase() : '';\n\t}\n\t\n\tfunction toUpper(str) {\n\t    return str ? str.toUpperCase() : '';\n\t}\n\t\n\tvar isArray = Array.isArray;\n\t\n\tfunction isString(val) {\n\t    return typeof val === 'string';\n\t}\n\t\n\t\n\t\n\tfunction isFunction(val) {\n\t    return typeof val === 'function';\n\t}\n\t\n\tfunction isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t}\n\t\n\tfunction isPlainObject(obj) {\n\t    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t}\n\t\n\tfunction isBlob(obj) {\n\t    return typeof Blob !== 'undefined' && obj instanceof Blob;\n\t}\n\t\n\tfunction isFormData(obj) {\n\t    return typeof FormData !== 'undefined' && obj instanceof FormData;\n\t}\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = PromiseObj.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\t\n\tfunction options(fn, obj, opts) {\n\t\n\t    opts = opts || {};\n\t\n\t    if (isFunction(opts)) {\n\t        opts = opts.call(obj);\n\t    }\n\t\n\t    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n\t}\n\t\n\tfunction each(obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (isArray(obj)) {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (isObject(obj)) {\n\t        for (key in obj) {\n\t            if (hasOwnProperty.call(obj, key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t}\n\t\n\tvar assign = Object.assign || _assign;\n\t\n\tfunction merge(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source, true);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction defaults(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t\n\t        for (var key in source) {\n\t            if (target[key] === undefined) {\n\t                target[key] = source[key];\n\t            }\n\t        }\n\t\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _assign(target) {\n\t\n\t    var args = slice.call(arguments, 1);\n\t\n\t    args.forEach(function (source) {\n\t        _merge(target, source);\n\t    });\n\t\n\t    return target;\n\t}\n\t\n\tfunction _merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (isArray(source[key]) && !isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            _merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tvar root = function (options$$1, next) {\n\t\n\t    var url = next(options$$1);\n\t\n\t    if (isString(options$$1.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options$$1.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t};\n\t\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tvar query = function (options$$1, next) {\n\t\n\t    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\t\n\t    each(options$$1.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = Url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t};\n\t\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\tfunction expand(url, params, variables) {\n\t\n\t    var tmpl = parse(url), expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t}\n\t\n\tfunction parse(template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function expand(context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null, values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t\n\t                } else {\n\t                    return encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t}\n\t\n\tfunction getValues(context, operator, key, modifier) {\n\t\n\t    var value = context[key], result = [];\n\t\n\t    if (isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            result.push(encodeValue(operator, value[k], k));\n\t                        }\n\t                    });\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(isDefined).forEach(function (value) {\n\t                        tmp.push(encodeValue(operator, value));\n\t                    });\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isDefined(value) {\n\t    return value !== undefined && value !== null;\n\t}\n\t\n\tfunction isKeyOperator(operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t}\n\t\n\tfunction encodeValue(operator, value, key) {\n\t\n\t    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t}\n\t\n\tfunction encodeReserved(str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t}\n\t\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tvar template = function (options) {\n\t\n\t    var variables = [], url = expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\t\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tfunction Url(url, params) {\n\t\n\t    var self = this || {}, options$$1 = url, transform;\n\t\n\t    if (isString(url)) {\n\t        options$$1 = {url: url, params: params};\n\t    }\n\t\n\t    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, self.$vm);\n\t    });\n\t\n\t    return transform(options$$1);\n\t}\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [template, query, root];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [], escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    var el = document.createElement('a');\n\t\n\t    if (document.documentMode) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options$$1) {\n\t        return handler.call(vm, options$$1, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\t\n\t    each(obj, function (value, key) {\n\t\n\t        hash = isObject(value) || isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tvar xdrClient = function (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(), handler = function (ref) {\n\t            var type = ref.type;\n\t\n\t\n\t            var status = 0;\n\t\n\t            if (type === 'load') {\n\t                status = 200;\n\t            } else if (type === 'error') {\n\t                status = 500;\n\t            }\n\t\n\t            resolve(request.respondWith(xdr.responseText, {status: status}));\n\t        };\n\t\n\t        request.abort = function () { return xdr.abort(); };\n\t\n\t        xdr.open(request.method, request.getUrl());\n\t\n\t        if (request.timeout) {\n\t            xdr.timeout = request.timeout;\n\t        }\n\t\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = handler;\n\t        xdr.onprogress = function () {};\n\t        xdr.send(request.getBody());\n\t    });\n\t};\n\t\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\t\n\tvar cors = function (request, next) {\n\t\n\t    if (inBrowser) {\n\t\n\t        var orgUrl = Url.parse(location.href);\n\t        var reqUrl = Url.parse(request.getUrl());\n\t\n\t        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\t\n\t            request.crossOrigin = true;\n\t            request.emulateHTTP = false;\n\t\n\t            if (!SUPPORTS_CORS) {\n\t                request.client = xdrClient;\n\t            }\n\t        }\n\t    }\n\t\n\t    next();\n\t};\n\t\n\t/**\n\t * Body Interceptor.\n\t */\n\t\n\tvar body = function (request, next) {\n\t\n\t    if (isFormData(request.body)) {\n\t\n\t        request.headers.delete('Content-Type');\n\t\n\t    } else if (isObject(request.body) || isArray(request.body)) {\n\t\n\t        if (request.emulateJSON) {\n\t            request.body = Url.params(request.body);\n\t            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n\t        } else {\n\t            request.body = JSON.stringify(request.body);\n\t        }\n\t    }\n\t\n\t    next(function (response) {\n\t\n\t        Object.defineProperty(response, 'data', {\n\t\n\t            get: function get() {\n\t                return this.body;\n\t            },\n\t\n\t            set: function set(body) {\n\t                this.body = body;\n\t            }\n\t\n\t        });\n\t\n\t        return response.bodyText ? when(response.text(), function (text) {\n\t\n\t            var type = response.headers.get('Content-Type') || '';\n\t\n\t            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\t\n\t                try {\n\t                    response.body = JSON.parse(text);\n\t                } catch (e) {\n\t                    response.body = null;\n\t                }\n\t\n\t            } else {\n\t                response.body = text;\n\t            }\n\t\n\t            return response;\n\t\n\t        }) : response;\n\t\n\t    });\n\t};\n\t\n\tfunction isJson(str) {\n\t\n\t    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\t\n\t    return start && end[start[0]].test(str);\n\t}\n\t\n\t/**\n\t * JSONP client (Browser).\n\t */\n\t\n\tvar jsonpClient = function (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\t\n\t        handler = function (ref) {\n\t            var type = ref.type;\n\t\n\t\n\t            var status = 0;\n\t\n\t            if (type === 'load' && body !== null) {\n\t                status = 200;\n\t            } else if (type === 'error') {\n\t                status = 500;\n\t            }\n\t\n\t            if (status && window[callback]) {\n\t                delete window[callback];\n\t                document.body.removeChild(script);\n\t            }\n\t\n\t            resolve(request.respondWith(body, {status: status}));\n\t        };\n\t\n\t        window[callback] = function (result) {\n\t            body = JSON.stringify(result);\n\t        };\n\t\n\t        request.abort = function () {\n\t            handler({type: 'abort'});\n\t        };\n\t\n\t        request.params[name] = callback;\n\t\n\t        if (request.timeout) {\n\t            setTimeout(request.abort, request.timeout);\n\t        }\n\t\n\t        script = document.createElement('script');\n\t        script.src = request.getUrl();\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\t\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tvar jsonp = function (request, next) {\n\t\n\t    if (request.method == 'JSONP') {\n\t        request.client = jsonpClient;\n\t    }\n\t\n\t    next();\n\t};\n\t\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tvar before = function (request, next) {\n\t\n\t    if (isFunction(request.before)) {\n\t        request.before.call(this, request);\n\t    }\n\t\n\t    next();\n\t};\n\t\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tvar method = function (request, next) {\n\t\n\t    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t        request.headers.set('X-HTTP-Method-Override', request.method);\n\t        request.method = 'POST';\n\t    }\n\t\n\t    next();\n\t};\n\t\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tvar header = function (request, next) {\n\t\n\t    var headers = assign({}, Http.headers.common,\n\t        !request.crossOrigin ? Http.headers.custom : {},\n\t        Http.headers[toLower(request.method)]\n\t    );\n\t\n\t    each(headers, function (value, name) {\n\t        if (!request.headers.has(name)) {\n\t            request.headers.set(name, value);\n\t        }\n\t    });\n\t\n\t    next();\n\t};\n\t\n\t/**\n\t * XMLHttp client (Browser).\n\t */\n\t\n\tvar SUPPORTS_BLOB = typeof Blob !== 'undefined' && typeof FileReader !== 'undefined';\n\t\n\tvar xhrClient = function (request) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(), handler = function (event) {\n\t\n\t            var response = request.respondWith(\n\t                'response' in xhr ? xhr.response : xhr.responseText, {\n\t                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n\t                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n\t                }\n\t            );\n\t\n\t            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n\t                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n\t            });\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        request.abort = function () { return xhr.abort(); };\n\t\n\t        if (request.progress) {\n\t            if (request.method === 'GET') {\n\t                xhr.addEventListener('progress', request.progress);\n\t            } else if (/^(POST|PUT)$/i.test(request.method)) {\n\t                xhr.upload.addEventListener('progress', request.progress);\n\t            }\n\t        }\n\t\n\t        xhr.open(request.method, request.getUrl(), true);\n\t\n\t        if (request.timeout) {\n\t            xhr.timeout = request.timeout;\n\t        }\n\t\n\t        if (request.credentials === true) {\n\t            xhr.withCredentials = true;\n\t        }\n\t\n\t        if (!request.crossOrigin) {\n\t            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n\t        }\n\t\n\t        if ('responseType' in xhr && SUPPORTS_BLOB) {\n\t            xhr.responseType = 'blob';\n\t        }\n\t\n\t        request.headers.forEach(function (value, name) {\n\t            xhr.setRequestHeader(name, value);\n\t        });\n\t\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = handler;\n\t        xhr.send(request.getBody());\n\t    });\n\t};\n\t\n\t/**\n\t * Http client (Node).\n\t */\n\t\n\tvar nodeClient = function (request) {\n\t\n\t    var client = __webpack_require__(52);\n\t\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var url = request.getUrl();\n\t        var body = request.getBody();\n\t        var method = request.method;\n\t        var headers = {}, handler;\n\t\n\t        request.headers.forEach(function (value, name) {\n\t            headers[name] = value;\n\t        });\n\t\n\t        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\t\n\t            var response = request.respondWith(resp.body, {\n\t                    status: resp.statusCode,\n\t                    statusText: trim(resp.statusMessage)\n\t                }\n\t            );\n\t\n\t            each(resp.headers, function (value, name) {\n\t                response.headers.set(name, value);\n\t            });\n\t\n\t            resolve(response);\n\t\n\t        }, function (error$$1) { return handler(error$$1.response); });\n\t    });\n\t};\n\t\n\t/**\n\t * Base client.\n\t */\n\t\n\tvar Client = function (context) {\n\t\n\t    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\t\n\t    if (!isObject(context)) {\n\t        context = null;\n\t    }\n\t\n\t    function Client(request) {\n\t        return new PromiseObj(function (resolve) {\n\t\n\t            function exec() {\n\t\n\t                handler = reqHandlers.pop();\n\t\n\t                if (isFunction(handler)) {\n\t                    handler.call(context, request, next);\n\t                } else {\n\t                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n\t                    next();\n\t                }\n\t            }\n\t\n\t            function next(response) {\n\t\n\t                if (isFunction(response)) {\n\t\n\t                    resHandlers.unshift(response);\n\t\n\t                } else if (isObject(response)) {\n\t\n\t                    resHandlers.forEach(function (handler) {\n\t                        response = when(response, function (response) {\n\t                            return handler.call(context, response) || response;\n\t                        });\n\t                    });\n\t\n\t                    when(response, resolve);\n\t\n\t                    return;\n\t                }\n\t\n\t                exec();\n\t            }\n\t\n\t            exec();\n\t\n\t        }, context);\n\t    }\n\t\n\t    Client.use = function (handler) {\n\t        reqHandlers.push(handler);\n\t    };\n\t\n\t    return Client;\n\t};\n\t\n\tfunction sendRequest(request, resolve) {\n\t\n\t    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\t\n\t    resolve(client(request));\n\t}\n\t\n\t/**\n\t * HTTP Headers.\n\t */\n\t\n\tvar Headers = function Headers(headers) {\n\t    var this$1 = this;\n\t\n\t\n\t    this.map = {};\n\t\n\t    each(headers, function (value, name) { return this$1.append(name, value); });\n\t};\n\t\n\tHeaders.prototype.has = function has (name) {\n\t    return getName(this.map, name) !== null;\n\t};\n\t\n\tHeaders.prototype.get = function get (name) {\n\t\n\t    var list = this.map[getName(this.map, name)];\n\t\n\t    return list ? list[0] : null;\n\t};\n\t\n\tHeaders.prototype.getAll = function getAll (name) {\n\t    return this.map[getName(this.map, name)] || [];\n\t};\n\t\n\tHeaders.prototype.set = function set (name, value) {\n\t    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n\t};\n\t\n\tHeaders.prototype.append = function append (name, value){\n\t\n\t    var list = this.getAll(name);\n\t\n\t    if (list.length) {\n\t        list.push(trim(value));\n\t    } else {\n\t        this.set(name, value);\n\t    }\n\t};\n\t\n\tHeaders.prototype.delete = function delete$1 (name){\n\t    delete this.map[getName(this.map, name)];\n\t};\n\t\n\tHeaders.prototype.deleteAll = function deleteAll (){\n\t    this.map = {};\n\t};\n\t\n\tHeaders.prototype.forEach = function forEach (callback, thisArg) {\n\t        var this$1 = this;\n\t\n\t    each(this.map, function (list, name) {\n\t        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n\t    });\n\t};\n\t\n\tfunction getName(map, name) {\n\t    return Object.keys(map).reduce(function (prev, curr) {\n\t        return toLower(name) === toLower(curr) ? curr : prev;\n\t    }, null);\n\t}\n\t\n\tfunction normalizeName(name) {\n\t\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t        throw new TypeError('Invalid character in header field name');\n\t    }\n\t\n\t    return trim(name);\n\t}\n\t\n\t/**\n\t * HTTP Response.\n\t */\n\t\n\tvar Response = function Response(body, ref) {\n\t    var url = ref.url;\n\t    var headers = ref.headers;\n\t    var status = ref.status;\n\t    var statusText = ref.statusText;\n\t\n\t\n\t    this.url = url;\n\t    this.ok = status >= 200 && status < 300;\n\t    this.status = status || 0;\n\t    this.statusText = statusText || '';\n\t    this.headers = new Headers(headers);\n\t    this.body = body;\n\t\n\t    if (isString(body)) {\n\t\n\t        this.bodyText = body;\n\t\n\t    } else if (isBlob(body)) {\n\t\n\t        this.bodyBlob = body;\n\t\n\t        if (isBlobText(body)) {\n\t            this.bodyText = blobText(body);\n\t        }\n\t    }\n\t};\n\t\n\tResponse.prototype.blob = function blob () {\n\t    return when(this.bodyBlob);\n\t};\n\t\n\tResponse.prototype.text = function text () {\n\t    return when(this.bodyText);\n\t};\n\t\n\tResponse.prototype.json = function json () {\n\t    return when(this.text(), function (text) { return JSON.parse(text); });\n\t};\n\t\n\tfunction blobText(body) {\n\t    return new PromiseObj(function (resolve) {\n\t\n\t        var reader = new FileReader();\n\t\n\t        reader.readAsText(body);\n\t        reader.onload = function () {\n\t            resolve(reader.result);\n\t        };\n\t\n\t    });\n\t}\n\t\n\tfunction isBlobText(body) {\n\t    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n\t}\n\t\n\t/**\n\t * HTTP Request.\n\t */\n\t\n\tvar Request = function Request(options$$1) {\n\t\n\t    this.body = null;\n\t    this.params = {};\n\t\n\t    assign(this, options$$1, {\n\t        method: toUpper(options$$1.method || 'GET')\n\t    });\n\t\n\t    if (!(this.headers instanceof Headers)) {\n\t        this.headers = new Headers(this.headers);\n\t    }\n\t};\n\t\n\tRequest.prototype.getUrl = function getUrl (){\n\t    return Url(this);\n\t};\n\t\n\tRequest.prototype.getBody = function getBody (){\n\t    return this.body;\n\t};\n\t\n\tRequest.prototype.respondWith = function respondWith (body, options$$1) {\n\t    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n\t};\n\t\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\n\tvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\t\n\tfunction Http(options$$1) {\n\t\n\t    var self = this || {}, client = Client(self.$vm);\n\t\n\t    defaults(options$$1 || {}, self.$options, Http.options);\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client.use(handler);\n\t    });\n\t\n\t    return client(new Request(options$$1)).then(function (response) {\n\t\n\t        return response.ok ? response : PromiseObj.reject(response);\n\t\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            error(response);\n\t        }\n\t\n\t        return PromiseObj.reject(response);\n\t    });\n\t}\n\t\n\tHttp.options = {};\n\t\n\tHttp.headers = {\n\t    put: JSON_CONTENT_TYPE,\n\t    post: JSON_CONTENT_TYPE,\n\t    patch: JSON_CONTENT_TYPE,\n\t    delete: JSON_CONTENT_TYPE,\n\t    common: COMMON_HEADERS,\n\t    custom: {}\n\t};\n\t\n\tHttp.interceptors = [before, method, body, jsonp, header, cors];\n\t\n\t['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\t\n\t    Http[method$$1] = function (url, options$$1) {\n\t        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n\t    };\n\t\n\t});\n\t\n\t['post', 'put', 'patch'].forEach(function (method$$1) {\n\t\n\t    Http[method$$1] = function (url, body$$1, options$$1) {\n\t        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body$$1}));\n\t    };\n\t\n\t});\n\t\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tfunction Resource(url, params, actions, options$$1) {\n\t\n\t    var self = this || {}, resource = {};\n\t\n\t    actions = assign({},\n\t        Resource.actions,\n\t        actions\n\t    );\n\t\n\t    each(actions, function (action, name) {\n\t\n\t        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || Http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options$$1 = assign({}, action), params = {}, body;\n\t\n\t    switch (args.length) {\n\t\n\t        case 2:\n\t\n\t            params = args[0];\n\t            body = args[1];\n\t\n\t            break;\n\t\n\t        case 1:\n\t\n\t            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n\t                body = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options$$1.body = body;\n\t    options$$1.params = assign({}, options$$1.params, params);\n\t\n\t    return options$$1;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: {method: 'GET'},\n\t    save: {method: 'POST'},\n\t    query: {method: 'GET'},\n\t    update: {method: 'PUT'},\n\t    remove: {method: 'DELETE'},\n\t    delete: {method: 'DELETE'}\n\t\n\t};\n\t\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction plugin(Vue) {\n\t\n\t    if (plugin.installed) {\n\t        return;\n\t    }\n\t\n\t    Util(Vue);\n\t\n\t    Vue.url = Url;\n\t    Vue.http = Http;\n\t    Vue.resource = Resource;\n\t    Vue.Promise = PromiseObj;\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function get() {\n\t                return options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function get() {\n\t                return options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function get() {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function get() {\n\t                var this$1 = this;\n\t\n\t                return function (executor) { return new Vue.Promise(executor, this$1); };\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(plugin);\n\t}\n\t\n\tmodule.exports = plugin;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(45);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(50)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Typeahead.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Typeahead.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 52 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/build/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b8d1a2156ae149f7dfce","import Vue from 'vue'\nimport VueResource from 'vue-resource'\nimport Typeahead from './Typeahead.vue'\n\nVue.use(VueResource)\n\nnew Vue({\n  el: 'body',\n  components: {\n    Typeahead\n  }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./demo/main.js","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 1\n// module chunks = 0","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 2\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 3\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 4\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 5\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_defined.js\n// module id = 6\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 7\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_iobject.js\n// module id = 8\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 9\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-integer.js\n// module id = 10\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-iobject.js\n// module id = 11\n// module chunks = 0","/*!\n * Vue.js v1.0.28\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delimited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([^-])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/* istanbul ignore next */\nfunction isNative(Ctor) {\n  return (/native code/.test(Ctor.toString())\n  );\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc = undefined;\n\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var noop = function noop() {};\n    timerFunc = function () {\n      p.then(nextTickHandler);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) setTimeout(noop);\n    };\n  } else if (typeof MutationObserver !== 'undefined') {\n    // use MutationObserver where native Promise is not available,\n    // e.g. IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = setTimeout;\n  }\n\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar len;\nvar index;\nvar chr;\nvar state;\nvar startState = 0;\nvar filterState = 1;\nvar filterNameState = 2;\nvar filterArgState = 3;\n\nvar doubleChr = 0x22;\nvar singleChr = 0x27;\nvar pipeChr = 0x7C;\nvar escapeChr = 0x5C;\nvar spaceChr = 0x20;\n\nvar expStartChr = { 0x5B: 1, 0x7B: 1, 0x28: 1 };\nvar expChrPair = { 0x5B: 0x5D, 0x7B: 0x7D, 0x28: 0x29 };\n\nfunction peek() {\n  return str.charCodeAt(index + 1);\n}\n\nfunction next() {\n  return str.charCodeAt(++index);\n}\n\nfunction eof() {\n  return index >= len;\n}\n\nfunction eatSpace() {\n  while (peek() === spaceChr) {\n    next();\n  }\n}\n\nfunction isStringStart(chr) {\n  return chr === doubleChr || chr === singleChr;\n}\n\nfunction isExpStart(chr) {\n  return expStartChr[chr];\n}\n\nfunction isExpEnd(start, chr) {\n  return expChrPair[start] === chr;\n}\n\nfunction parseString() {\n  var stringQuote = next();\n  var chr;\n  while (!eof()) {\n    chr = next();\n    // escape char\n    if (chr === escapeChr) {\n      next();\n    } else if (chr === stringQuote) {\n      break;\n    }\n  }\n}\n\nfunction parseSpecialExp(chr) {\n  var inExp = 0;\n  var startChr = chr;\n\n  while (!eof()) {\n    chr = peek();\n    if (isStringStart(chr)) {\n      parseString();\n      continue;\n    }\n\n    if (startChr === chr) {\n      inExp++;\n    }\n    if (isExpEnd(startChr, chr)) {\n      inExp--;\n    }\n\n    next();\n\n    if (inExp === 0) {\n      break;\n    }\n  }\n}\n\n/**\n * syntax:\n * expression | filterName  [arg  arg [| filterName arg arg]]\n */\n\nfunction parseExpression() {\n  var start = index;\n  while (!eof()) {\n    chr = peek();\n    if (isStringStart(chr)) {\n      parseString();\n    } else if (isExpStart(chr)) {\n      parseSpecialExp(chr);\n    } else if (chr === pipeChr) {\n      next();\n      chr = peek();\n      if (chr === pipeChr) {\n        next();\n      } else {\n        if (state === startState || state === filterArgState) {\n          state = filterState;\n        }\n        break;\n      }\n    } else if (chr === spaceChr && (state === filterNameState || state === filterArgState)) {\n      eatSpace();\n      break;\n    } else {\n      if (state === filterState) {\n        state = filterNameState;\n      }\n      next();\n    }\n  }\n\n  return str.slice(start + 1, index) || null;\n}\n\nfunction parseFilterList() {\n  var filters = [];\n  while (!eof()) {\n    filters.push(parseFilter());\n  }\n  return filters;\n}\n\nfunction parseFilter() {\n  var filter = {};\n  var args;\n\n  state = filterState;\n  filter.name = parseExpression().trim();\n\n  state = filterArgState;\n  args = parseFilterArguments();\n\n  if (args.length) {\n    filter.args = args;\n  }\n  return filter;\n}\n\nfunction parseFilterArguments() {\n  var args = [];\n  while (!eof() && state !== filterState) {\n    var arg = parseExpression();\n    if (!arg) {\n      break;\n    }\n    args.push(processFilterArg(arg));\n  }\n\n  return args;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  dir = {};\n  len = str.length;\n  index = -1;\n  chr = '';\n  state = startState;\n\n  var filters;\n\n  if (str.indexOf('|') < 0) {\n    dir.expression = str.trim();\n  } else {\n    dir.expression = parseExpression().trim();\n    filters = parseFilterList();\n    if (filters.length) {\n      dir.filters = filters;\n    }\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIOS: isIOS,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to register itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression$1(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression$1(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\\"']|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression$1(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression$1,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression$1(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('v-if')) {\n      warn('<' + this.el.tagName.toLowerCase() + ' v-for=\"' + this.expression + '\" v-if=\"' + this.el.getAttribute('v-if') + '\">: ' + 'Using v-if and v-for on the same element is not recommended - ' + 'consider filtering the source Array instead.', this.vm);\n    }\n\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new instance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.get();\n      if (isArray(model)) {\n        var val = self.getValue();\n        var i = indexOf(model, val);\n        if (el.checked) {\n          if (i < 0) {\n            self.set(model.concat(val));\n          }\n        } else if (i > -1) {\n          self.set(model.slice(0, i).concat(model.slice(i + 1)));\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// logic control\n// two-way binding\n// event handling\n// attributes\n// ref & el\n// cloak\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var propsData = vm.$options.propsData;\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (propsData && (value = propsData[name] || propsData[path]) !== null) {\n      // has propsData\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required && (!propsData || !(name in propsData) && !(path in propsData))) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  sortDirectives(dirs);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * sort directives by priority (stable sort)\n *\n * @param {Array} dirs\n */\nfunction sortDirectives(dirs) {\n  if (dirs.length === 0) return;\n\n  var groupedMap = {};\n  var i, j, k, l;\n  var index = 0;\n  var priorities = [];\n  for (i = 0, j = dirs.length; i < j; i++) {\n    var dir = dirs[i];\n    var priority = dir.descriptor.def.priority || DEFAULT_PRIORITY;\n    var array = groupedMap[priority];\n    if (!array) {\n      array = groupedMap[priority] = [];\n      priorities.push(priority);\n    }\n    array.push(dir);\n  }\n\n  priorities.sort(function (a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n  });\n  for (i = 0, j = priorities.length; i < j; i++) {\n    var group = groupedMap[priorities[i]];\n    for (k = 0, l = group.length; k < l; k++) {\n      dirs[index++] = group[k];\n    }\n  }\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n\n      var componentName = options.el.tagName.toLowerCase();\n      if (componentName === 'component' && options.name) {\n        componentName += ':' + options.name;\n      }\n\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + componentName + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    // a textarea which has v-pre attr should skip complie.\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for, v-if and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    if (!replacer) {\n      return frag;\n    }\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression$1(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression$1(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression$1(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Order filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.28';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.common.js\n// module id = 12\n// module chunks = 0","import { util } from 'vue'\n\nexport default {\n  props:['debounce'],\n  data () {\n    return {\n      items: [],\n      query: '',\n      current: -1,\n      loading: false,\n      selectFirst: false,\n      queryParamName: 'q',\n      timer:null,\n    }\n  },\n\n  computed: {\n    hasItems () {\n      return this.items.length > 0\n    },\n\n    isEmpty () {\n      return !this.query\n    },\n\n    isDirty () {\n      return !!this.query\n    }\n  },\n\n  methods: {\n    update () {\n      var th = this;\n      this.loading = true\n      if( this.debounce > 0) {\n        if( this.timer != null ) { \n          clearTimeout(this.timer)\n        }\n        this.timer = setTimeout(function(){ th.fireFetch() },th.debounce)\n      }else{\n        this.fireFetch()\n      }\n    },\n    fireFetch () {\n      if (!this.query) {\n        this.loading = false\n        return this.reset()\n      }\n\n      if (this.minChars && this.query.length < this.minChars) {\n        this.loading = false\n        return\n      }\n\n      this.fetch().then((response) => {\n        if (this.query) {\n          let data = response.data\n          data = this.prepareResponseData ? this.prepareResponseData(data) : data\n          this.items = this.limit ? data.slice(0, this.limit) : data\n          this.current = -1\n          this.loading = false\n\n          if (this.selectFirst) {\n            this.down()\n          }\n        }\n      })\n    },\n\n    fetch () {\n      if (!this.$http) {\n        return util.warn('You need to install the `vue-resource` plugin', this)\n      }\n\n      if (!this.src) {\n        return util.warn('You need to set the `src` property', this)\n      }\n\n      const src = this.queryParamName\n        ? this.src\n        : this.src + this.query\n\n      const params = this.queryParamName\n        ? Object.assign({ [this.queryParamName]: this.query }, this.data)\n        : this.data\n\n      return this.$http.get(src, { params })\n    },\n\n    reset () {\n      this.items = []\n      this.query = ''\n      this.loading = false\n    },\n\n    setActive (index) {\n      this.current = index\n    },\n\n    activeClass (index) {\n      return {\n        active: this.current === index\n      }\n    },\n\n    hit () {\n      if (this.current !== -1) {\n        this.onHit(this.items[this.current])\n      }\n    },\n\n    up () {\n      if (this.current > 0) {\n        this.current--\n      } else if (this.current === -1) {\n        this.current = this.items.length - 1\n      } else {\n        this.current = -1\n      }\n    },\n\n    down () {\n      if (this.current < this.items.length - 1) {\n        this.current++\n      } else {\n        this.current = -1\n      }\n    },\n\n    onHit () {\n      util.warn('You need to implement the `onHit` method', this)\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","<template>\n  <div class=\"Typeahead\">\n    <i class=\"fa fa-spinner fa-spin\" v-if=\"loading\"></i>\n    <template v-else>\n      <i class=\"fa fa-search\" v-show=\"isEmpty\"></i>\n      <i class=\"fa fa-times\" v-show=\"isDirty\" @click=\"reset\"></i>\n    </template>\n\n    <input type=\"text\"\n           class=\"Typeahead__input\"\n           placeholder=\"Search twitter user\"\n           autocomplete=\"off\"\n           v-model=\"query\"\n           @keydown.down=\"down\"\n           @keydown.up=\"up\"\n           @keydown.enter=\"hit\"\n           @keydown.esc=\"reset\"\n           @blur=\"reset\"\n           @input=\"update\"/>\n\n    <ul v-show=\"hasItems\">\n      <li v-for=\"item in items\" :class=\"activeClass($index)\" @mousedown=\"hit\" @mousemove=\"setActive($index)\">\n        <span class=\"name\" v-text=\"item.name\"></span>\n        <span class=\"screen-name\" v-text=\"item.screen_name\"></span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n\n\n<script>\nimport VueTypeahead from '../src/main'\n\nexport default {\n  extends: VueTypeahead,\n\n  data () {\n    return {\n      src: 'https://typeahead-js-twitter-api-proxy.herokuapp.com/demo/search',\n      limit: 5,\n      minChars: 3\n    }\n  },\n\n  methods: {\n    onHit (item) {\n      window.location.href = 'http://twitter.com/' + item.screen_name\n    }\n  }\n}\n</script>\n\n\n\n<style scoped>\n.Typeahead {\n  position: relative;\n}\n\n.Typeahead__input {\n  width: 100%;\n  font-size: 14px;\n  color: #2c3e50;\n  line-height: 1.42857143;\n  box-shadow: inset 0 1px 4px rgba(0,0,0,.4);\n  -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;\n  transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;\n  font-weight: 300;\n  padding: 12px 26px;\n  border: none;\n  border-radius: 22px;\n  letter-spacing: 1px;\n  box-sizing: border-box;\n}\n\n.Typeahead__input:focus {\n  border-color: #4fc08d;\n  outline: 0;\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px #4fc08d;\n}\n\n.fa-times {\n  cursor: pointer;\n}\n\ni {\n  float: right;\n  position: relative;\n  top: 30px;\n  right: 29px;\n  opacity: 0.4;\n}\n\nul {\n  position: absolute;\n  padding: 0;\n  margin-top: 8px;\n  min-width: 100%;\n  background-color: #fff;\n  list-style: none;\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0,0,0, 0.25);\n  z-index: 1000;\n}\n\nli {\n  padding: 10px 16px;\n  border-bottom: 1px solid #ccc;\n  cursor: pointer;\n}\n\nli:first-child {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\nli:last-child {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-bottom: 0;\n}\n\nspan {\n  display: block;\n  color: #2c3e50;\n}\n\n.active {\n  background-color: #3aa373;\n}\n\n.active span {\n  color: white;\n}\n\n.name {\n  font-weight: 700;\n  font-size: 18px;\n}\n\n.screen-name {\n  font-style: italic;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Typeahead.vue?aadb548c","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/assign.js\n// module id = 15\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 16\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/defineProperty.js\n// module id = 17\n// module chunks = 0","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/assign.js\n// module id = 18\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 19\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 20\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 21\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_array-includes.js\n// module id = 22\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_cof.js\n// module id = 23\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 24\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 25\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_enum-bug-keys.js\n// module id = 26\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_has.js\n// module id = 27\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 28\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 29\n// module chunks = 0","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-assign.js\n// module id = 30\n// module chunks = 0","exports.f = Object.getOwnPropertySymbols;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-gops.js\n// module id = 31\n// module chunks = 0","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys-internal.js\n// module id = 32\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-keys.js\n// module id = 33\n// module chunks = 0","exports.f = {}.propertyIsEnumerable;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-pie.js\n// module id = 34\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 35\n// module chunks = 0","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared-key.js\n// module id = 36\n// module chunks = 0","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_shared.js\n// module id = 37\n// module chunks = 0","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-index.js\n// module id = 38\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-length.js\n// module id = 39\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-object.js\n// module id = 40\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 41\n// module chunks = 0","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_uid.js\n// module id = 42\n// module chunks = 0","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.assign.js\n// module id = 43\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 44\n// module chunks = 0","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".Typeahead[_v-3de1d046]{position:relative}.Typeahead__input[_v-3de1d046]{width:100%;font-size:14px;color:#2c3e50;line-height:1.42857143;box-shadow:inset 0 1px 4px rgba(0,0,0,.4);-webkit-transition:border-color .15s ease-in-out,-webkit-box-shadow .15s ease-in-out;-webkit-transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;font-weight:300;padding:12px 26px;border:none;border-radius:22px;letter-spacing:1px;box-sizing:border-box}.Typeahead__input[_v-3de1d046]:focus{border-color:#4fc08d;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px #4fc08d}.fa-times[_v-3de1d046]{cursor:pointer}i[_v-3de1d046]{float:right;position:relative;top:30px;right:29px;opacity:.4}ul[_v-3de1d046]{position:absolute;padding:0;margin-top:8px;min-width:100%;background-color:#fff;list-style:none;border-radius:4px;box-shadow:0 0 10px rgba(0,0,0,.25);z-index:1000}li[_v-3de1d046]{padding:10px 16px;border-bottom:1px solid #ccc;cursor:pointer}li[_v-3de1d046]:first-child{border-top-left-radius:4px;border-top-right-radius:4px}li[_v-3de1d046]:last-child{border-bottom-left-radius:4px;border-bottom-right-radius:4px;border-bottom:0}span[_v-3de1d046]{display:block;color:#2c3e50}.active[_v-3de1d046]{background-color:#3aa373}.active span[_v-3de1d046]{color:#fff}.name[_v-3de1d046]{font-weight:700;font-size:18px}.screen-name[_v-3de1d046]{font-style:italic}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./demo/Typeahead.vue\n// module id = 45\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 46\n// module chunks = 0","module.exports = \" <div class=Typeahead _v-3de1d046=\\\"\\\"> <i class=\\\"fa fa-spinner fa-spin\\\" v-if=loading _v-3de1d046=\\\"\\\"></i> <template v-else=\\\"\\\"> <i class=\\\"fa fa-search\\\" v-show=isEmpty _v-3de1d046=\\\"\\\"></i> <i class=\\\"fa fa-times\\\" v-show=isDirty @click=reset _v-3de1d046=\\\"\\\"></i> </template> <input type=text class=Typeahead__input placeholder=\\\"Search twitter user\\\" autocomplete=off v-model=query @keydown.down=down @keydown.up=up @keydown.enter=hit @keydown.esc=reset @blur=reset @input=update _v-3de1d046=\\\"\\\"> <ul v-show=hasItems _v-3de1d046=\\\"\\\"> <li v-for=\\\"item in items\\\" :class=activeClass($index) @mousedown=hit @mousemove=setActive($index) _v-3de1d046=\\\"\\\"> <span class=name v-text=item.name _v-3de1d046=\\\"\\\"></span> <span class=screen-name v-text=item.screen_name _v-3de1d046=\\\"\\\"></span> </li> </ul> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-3de1d046!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/Typeahead.vue\n// module id = 47\n// module chunks = 0","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\nrequire(\"!!vue-style-loader!css-loader!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Typeahead.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Typeahead.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/template-rewriter.js?id=_v-3de1d046!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Typeahead.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/Typeahead.vue\n// module id = 48\n// module chunks = 0","/*!\n * vue-resource v1.2.0\n * https://github.com/pagekit/vue-resource\n * Released under the MIT License.\n */\n\n'use strict';\n\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise$1(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise$1.reject = function (r) {\n    return new Promise$1(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise$1.resolve = function (x) {\n    return new Promise$1(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise$1.all = function all(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise$1.race = function race(iterable) {\n    return new Promise$1(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise$1.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p$1 = Promise$1.prototype;\n\np$1.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np$1.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np$1.notify = function notify() {\n    var promise = this;\n\n    nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np$1.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise$1(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np$1.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\n/**\n * Promise adapter.\n */\n\nif (typeof Promise === 'undefined') {\n    window.Promise = Promise$1;\n}\n\nfunction PromiseObj(executor, context) {\n\n    if (executor instanceof Promise) {\n        this.promise = executor;\n    } else {\n        this.promise = new Promise(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromiseObj.all = function (iterable, context) {\n    return new PromiseObj(Promise.all(iterable), context);\n};\n\nPromiseObj.resolve = function (value, context) {\n    return new PromiseObj(Promise.resolve(value), context);\n};\n\nPromiseObj.reject = function (reason, context) {\n    return new PromiseObj(Promise.reject(reason), context);\n};\n\nPromiseObj.race = function (iterable, context) {\n    return new PromiseObj(Promise.race(iterable), context);\n};\n\nvar p = PromiseObj.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.then(fulfilled, rejected), this.context);\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    return new PromiseObj(this.promise.catch(rejected), this.context);\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return Promise.reject(reason);\n        }\n    );\n};\n\n/**\n * Utility functions.\n */\n\nvar debug = false;\nvar util = {};\nvar ref = {};\nvar hasOwnProperty = ref.hasOwnProperty;\n\nvar ref$1 = [];\nvar slice = ref$1.slice;\n\nvar inBrowser = typeof window !== 'undefined';\n\nvar Util = function (Vue) {\n    util = Vue.util;\n    debug = Vue.config.debug || !Vue.config.silent;\n};\n\nfunction warn(msg) {\n    if (typeof console !== 'undefined' && debug) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n}\n\nfunction error(msg) {\n    if (typeof console !== 'undefined') {\n        console.error(msg);\n    }\n}\n\nfunction nextTick(cb, ctx) {\n    return util.nextTick(cb, ctx);\n}\n\nfunction trim(str) {\n    return str ? str.replace(/^\\s*|\\s*$/g, '') : '';\n}\n\nfunction toLower(str) {\n    return str ? str.toLowerCase() : '';\n}\n\nfunction toUpper(str) {\n    return str ? str.toUpperCase() : '';\n}\n\nvar isArray = Array.isArray;\n\nfunction isString(val) {\n    return typeof val === 'string';\n}\n\n\n\nfunction isFunction(val) {\n    return typeof val === 'function';\n}\n\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n}\n\nfunction isBlob(obj) {\n    return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n\nfunction isFormData(obj) {\n    return typeof FormData !== 'undefined' && obj instanceof FormData;\n}\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = PromiseObj.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\nfunction options(fn, obj, opts) {\n\n    opts = opts || {};\n\n    if (isFunction(opts)) {\n        opts = opts.call(obj);\n    }\n\n    return merge(fn.bind({$vm: obj, $options: opts}), fn, {$options: opts});\n}\n\nfunction each(obj, iterator) {\n\n    var i, key;\n\n    if (isArray(obj)) {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (isObject(obj)) {\n        for (key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n}\n\nvar assign = Object.assign || _assign;\n\nfunction merge(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source, true);\n    });\n\n    return target;\n}\n\nfunction defaults(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n\n        for (var key in source) {\n            if (target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n\n    });\n\n    return target;\n}\n\nfunction _assign(target) {\n\n    var args = slice.call(arguments, 1);\n\n    args.forEach(function (source) {\n        _merge(target, source);\n    });\n\n    return target;\n}\n\nfunction _merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n            if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (isArray(source[key]) && !isArray(target[key])) {\n                target[key] = [];\n            }\n            _merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n/**\n * Root Prefix Transform.\n */\n\nvar root = function (options$$1, next) {\n\n    var url = next(options$$1);\n\n    if (isString(options$$1.root) && !url.match(/^(https?:)?\\//)) {\n        url = options$$1.root + '/' + url;\n    }\n\n    return url;\n};\n\n/**\n * Query Parameter Transform.\n */\n\nvar query = function (options$$1, next) {\n\n    var urlParams = Object.keys(Url.options.params), query = {}, url = next(options$$1);\n\n    each(options$$1.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = Url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nfunction expand(url, params, variables) {\n\n    var tmpl = parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n}\n\nfunction parse(template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function expand(context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return encodeReserved(literal);\n                }\n            });\n        }\n    };\n}\n\nfunction getValues(context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : null));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n\n                if (isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n}\n\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n}\n\nfunction encodeValue(operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n}\n\nfunction encodeReserved(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n}\n\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar template = function (options) {\n\n    var variables = [], url = expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n/**\n * Service for URL templating.\n */\n\nfunction Url(url, params) {\n\n    var self = this || {}, options$$1 = url, transform;\n\n    if (isString(url)) {\n        options$$1 = {url: url, params: params};\n    }\n\n    options$$1 = merge({}, Url.options, self.$options, options$$1);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, self.$vm);\n    });\n\n    return transform(options$$1);\n}\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [template, query, root];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    var el = document.createElement('a');\n\n    if (document.documentMode) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options$$1) {\n        return handler.call(vm, options$$1, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = isArray(obj), plain = isPlainObject(obj), hash;\n\n    each(obj, function (value, key) {\n\n        hash = isObject(value) || isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar xdrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xdr = new XDomainRequest(), handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load') {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            resolve(request.respondWith(xdr.responseText, {status: status}));\n        };\n\n        request.abort = function () { return xdr.abort(); };\n\n        xdr.open(request.method, request.getUrl());\n\n        if (request.timeout) {\n            xdr.timeout = request.timeout;\n        }\n\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = handler;\n        xdr.onprogress = function () {};\n        xdr.send(request.getBody());\n    });\n};\n\n/**\n * CORS Interceptor.\n */\n\nvar SUPPORTS_CORS = inBrowser && 'withCredentials' in new XMLHttpRequest();\n\nvar cors = function (request, next) {\n\n    if (inBrowser) {\n\n        var orgUrl = Url.parse(location.href);\n        var reqUrl = Url.parse(request.getUrl());\n\n        if (reqUrl.protocol !== orgUrl.protocol || reqUrl.host !== orgUrl.host) {\n\n            request.crossOrigin = true;\n            request.emulateHTTP = false;\n\n            if (!SUPPORTS_CORS) {\n                request.client = xdrClient;\n            }\n        }\n    }\n\n    next();\n};\n\n/**\n * Body Interceptor.\n */\n\nvar body = function (request, next) {\n\n    if (isFormData(request.body)) {\n\n        request.headers.delete('Content-Type');\n\n    } else if (isObject(request.body) || isArray(request.body)) {\n\n        if (request.emulateJSON) {\n            request.body = Url.params(request.body);\n            request.headers.set('Content-Type', 'application/x-www-form-urlencoded');\n        } else {\n            request.body = JSON.stringify(request.body);\n        }\n    }\n\n    next(function (response) {\n\n        Object.defineProperty(response, 'data', {\n\n            get: function get() {\n                return this.body;\n            },\n\n            set: function set(body) {\n                this.body = body;\n            }\n\n        });\n\n        return response.bodyText ? when(response.text(), function (text) {\n\n            var type = response.headers.get('Content-Type') || '';\n\n            if (type.indexOf('application/json') === 0 || isJson(text)) {\n\n                try {\n                    response.body = JSON.parse(text);\n                } catch (e) {\n                    response.body = null;\n                }\n\n            } else {\n                response.body = text;\n            }\n\n            return response;\n\n        }) : response;\n\n    });\n};\n\nfunction isJson(str) {\n\n    var start = str.match(/^\\[|^\\{(?!\\{)/), end = {'[': /]$/, '{': /}$/};\n\n    return start && end[start[0]].test(str);\n}\n\n/**\n * JSONP client (Browser).\n */\n\nvar jsonpClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var name = request.jsonp || 'callback', callback = request.jsonpCallback || '_jsonp' + Math.random().toString(36).substr(2), body = null, handler, script;\n\n        handler = function (ref) {\n            var type = ref.type;\n\n\n            var status = 0;\n\n            if (type === 'load' && body !== null) {\n                status = 200;\n            } else if (type === 'error') {\n                status = 500;\n            }\n\n            if (status && window[callback]) {\n                delete window[callback];\n                document.body.removeChild(script);\n            }\n\n            resolve(request.respondWith(body, {status: status}));\n        };\n\n        window[callback] = function (result) {\n            body = JSON.stringify(result);\n        };\n\n        request.abort = function () {\n            handler({type: 'abort'});\n        };\n\n        request.params[name] = callback;\n\n        if (request.timeout) {\n            setTimeout(request.abort, request.timeout);\n        }\n\n        script = document.createElement('script');\n        script.src = request.getUrl();\n        script.type = 'text/javascript';\n        script.async = true;\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n/**\n * JSONP Interceptor.\n */\n\nvar jsonp = function (request, next) {\n\n    if (request.method == 'JSONP') {\n        request.client = jsonpClient;\n    }\n\n    next();\n};\n\n/**\n * Before Interceptor.\n */\n\nvar before = function (request, next) {\n\n    if (isFunction(request.before)) {\n        request.before.call(this, request);\n    }\n\n    next();\n};\n\n/**\n * HTTP method override Interceptor.\n */\n\nvar method = function (request, next) {\n\n    if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n        request.headers.set('X-HTTP-Method-Override', request.method);\n        request.method = 'POST';\n    }\n\n    next();\n};\n\n/**\n * Header Interceptor.\n */\n\nvar header = function (request, next) {\n\n    var headers = assign({}, Http.headers.common,\n        !request.crossOrigin ? Http.headers.custom : {},\n        Http.headers[toLower(request.method)]\n    );\n\n    each(headers, function (value, name) {\n        if (!request.headers.has(name)) {\n            request.headers.set(name, value);\n        }\n    });\n\n    next();\n};\n\n/**\n * XMLHttp client (Browser).\n */\n\nvar SUPPORTS_BLOB = typeof Blob !== 'undefined' && typeof FileReader !== 'undefined';\n\nvar xhrClient = function (request) {\n    return new PromiseObj(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), handler = function (event) {\n\n            var response = request.respondWith(\n                'response' in xhr ? xhr.response : xhr.responseText, {\n                    status: xhr.status === 1223 ? 204 : xhr.status, // IE9 status bug\n                    statusText: xhr.status === 1223 ? 'No Content' : trim(xhr.statusText)\n                }\n            );\n\n            each(trim(xhr.getAllResponseHeaders()).split('\\n'), function (row) {\n                response.headers.append(row.slice(0, row.indexOf(':')), row.slice(row.indexOf(':') + 1));\n            });\n\n            resolve(response);\n        };\n\n        request.abort = function () { return xhr.abort(); };\n\n        if (request.progress) {\n            if (request.method === 'GET') {\n                xhr.addEventListener('progress', request.progress);\n            } else if (/^(POST|PUT)$/i.test(request.method)) {\n                xhr.upload.addEventListener('progress', request.progress);\n            }\n        }\n\n        xhr.open(request.method, request.getUrl(), true);\n\n        if (request.timeout) {\n            xhr.timeout = request.timeout;\n        }\n\n        if (request.credentials === true) {\n            xhr.withCredentials = true;\n        }\n\n        if (!request.crossOrigin) {\n            request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        if ('responseType' in xhr && SUPPORTS_BLOB) {\n            xhr.responseType = 'blob';\n        }\n\n        request.headers.forEach(function (value, name) {\n            xhr.setRequestHeader(name, value);\n        });\n\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = handler;\n        xhr.send(request.getBody());\n    });\n};\n\n/**\n * Http client (Node).\n */\n\nvar nodeClient = function (request) {\n\n    var client = require('got');\n\n    return new PromiseObj(function (resolve) {\n\n        var url = request.getUrl();\n        var body = request.getBody();\n        var method = request.method;\n        var headers = {}, handler;\n\n        request.headers.forEach(function (value, name) {\n            headers[name] = value;\n        });\n\n        client(url, {body: body, method: method, headers: headers}).then(handler = function (resp) {\n\n            var response = request.respondWith(resp.body, {\n                    status: resp.statusCode,\n                    statusText: trim(resp.statusMessage)\n                }\n            );\n\n            each(resp.headers, function (value, name) {\n                response.headers.set(name, value);\n            });\n\n            resolve(response);\n\n        }, function (error$$1) { return handler(error$$1.response); });\n    });\n};\n\n/**\n * Base client.\n */\n\nvar Client = function (context) {\n\n    var reqHandlers = [sendRequest], resHandlers = [], handler;\n\n    if (!isObject(context)) {\n        context = null;\n    }\n\n    function Client(request) {\n        return new PromiseObj(function (resolve) {\n\n            function exec() {\n\n                handler = reqHandlers.pop();\n\n                if (isFunction(handler)) {\n                    handler.call(context, request, next);\n                } else {\n                    warn((\"Invalid interceptor of type \" + (typeof handler) + \", must be a function\"));\n                    next();\n                }\n            }\n\n            function next(response) {\n\n                if (isFunction(response)) {\n\n                    resHandlers.unshift(response);\n\n                } else if (isObject(response)) {\n\n                    resHandlers.forEach(function (handler) {\n                        response = when(response, function (response) {\n                            return handler.call(context, response) || response;\n                        });\n                    });\n\n                    when(response, resolve);\n\n                    return;\n                }\n\n                exec();\n            }\n\n            exec();\n\n        }, context);\n    }\n\n    Client.use = function (handler) {\n        reqHandlers.push(handler);\n    };\n\n    return Client;\n};\n\nfunction sendRequest(request, resolve) {\n\n    var client = request.client || (inBrowser ? xhrClient : nodeClient);\n\n    resolve(client(request));\n}\n\n/**\n * HTTP Headers.\n */\n\nvar Headers = function Headers(headers) {\n    var this$1 = this;\n\n\n    this.map = {};\n\n    each(headers, function (value, name) { return this$1.append(name, value); });\n};\n\nHeaders.prototype.has = function has (name) {\n    return getName(this.map, name) !== null;\n};\n\nHeaders.prototype.get = function get (name) {\n\n    var list = this.map[getName(this.map, name)];\n\n    return list ? list[0] : null;\n};\n\nHeaders.prototype.getAll = function getAll (name) {\n    return this.map[getName(this.map, name)] || [];\n};\n\nHeaders.prototype.set = function set (name, value) {\n    this.map[normalizeName(getName(this.map, name) || name)] = [trim(value)];\n};\n\nHeaders.prototype.append = function append (name, value){\n\n    var list = this.getAll(name);\n\n    if (list.length) {\n        list.push(trim(value));\n    } else {\n        this.set(name, value);\n    }\n};\n\nHeaders.prototype.delete = function delete$1 (name){\n    delete this.map[getName(this.map, name)];\n};\n\nHeaders.prototype.deleteAll = function deleteAll (){\n    this.map = {};\n};\n\nHeaders.prototype.forEach = function forEach (callback, thisArg) {\n        var this$1 = this;\n\n    each(this.map, function (list, name) {\n        each(list, function (value) { return callback.call(thisArg, value, name, this$1); });\n    });\n};\n\nfunction getName(map, name) {\n    return Object.keys(map).reduce(function (prev, curr) {\n        return toLower(name) === toLower(curr) ? curr : prev;\n    }, null);\n}\n\nfunction normalizeName(name) {\n\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n        throw new TypeError('Invalid character in header field name');\n    }\n\n    return trim(name);\n}\n\n/**\n * HTTP Response.\n */\n\nvar Response = function Response(body, ref) {\n    var url = ref.url;\n    var headers = ref.headers;\n    var status = ref.status;\n    var statusText = ref.statusText;\n\n\n    this.url = url;\n    this.ok = status >= 200 && status < 300;\n    this.status = status || 0;\n    this.statusText = statusText || '';\n    this.headers = new Headers(headers);\n    this.body = body;\n\n    if (isString(body)) {\n\n        this.bodyText = body;\n\n    } else if (isBlob(body)) {\n\n        this.bodyBlob = body;\n\n        if (isBlobText(body)) {\n            this.bodyText = blobText(body);\n        }\n    }\n};\n\nResponse.prototype.blob = function blob () {\n    return when(this.bodyBlob);\n};\n\nResponse.prototype.text = function text () {\n    return when(this.bodyText);\n};\n\nResponse.prototype.json = function json () {\n    return when(this.text(), function (text) { return JSON.parse(text); });\n};\n\nfunction blobText(body) {\n    return new PromiseObj(function (resolve) {\n\n        var reader = new FileReader();\n\n        reader.readAsText(body);\n        reader.onload = function () {\n            resolve(reader.result);\n        };\n\n    });\n}\n\nfunction isBlobText(body) {\n    return body.type.indexOf('text') === 0 || body.type.indexOf('json') !== -1;\n}\n\n/**\n * HTTP Request.\n */\n\nvar Request = function Request(options$$1) {\n\n    this.body = null;\n    this.params = {};\n\n    assign(this, options$$1, {\n        method: toUpper(options$$1.method || 'GET')\n    });\n\n    if (!(this.headers instanceof Headers)) {\n        this.headers = new Headers(this.headers);\n    }\n};\n\nRequest.prototype.getUrl = function getUrl (){\n    return Url(this);\n};\n\nRequest.prototype.getBody = function getBody (){\n    return this.body;\n};\n\nRequest.prototype.respondWith = function respondWith (body, options$$1) {\n    return new Response(body, assign(options$$1 || {}, {url: this.getUrl()}));\n};\n\n/**\n * Service for sending network requests.\n */\n\nvar COMMON_HEADERS = {'Accept': 'application/json, text/plain, */*'};\nvar JSON_CONTENT_TYPE = {'Content-Type': 'application/json;charset=utf-8'};\n\nfunction Http(options$$1) {\n\n    var self = this || {}, client = Client(self.$vm);\n\n    defaults(options$$1 || {}, self.$options, Http.options);\n\n    Http.interceptors.forEach(function (handler) {\n        client.use(handler);\n    });\n\n    return client(new Request(options$$1)).then(function (response) {\n\n        return response.ok ? response : PromiseObj.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            error(response);\n        }\n\n        return PromiseObj.reject(response);\n    });\n}\n\nHttp.options = {};\n\nHttp.headers = {\n    put: JSON_CONTENT_TYPE,\n    post: JSON_CONTENT_TYPE,\n    patch: JSON_CONTENT_TYPE,\n    delete: JSON_CONTENT_TYPE,\n    common: COMMON_HEADERS,\n    custom: {}\n};\n\nHttp.interceptors = [before, method, body, jsonp, header, cors];\n\n['get', 'delete', 'head', 'jsonp'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1}));\n    };\n\n});\n\n['post', 'put', 'patch'].forEach(function (method$$1) {\n\n    Http[method$$1] = function (url, body$$1, options$$1) {\n        return this(assign(options$$1 || {}, {url: url, method: method$$1, body: body$$1}));\n    };\n\n});\n\n/**\n * Service for interacting with RESTful services.\n */\n\nfunction Resource(url, params, actions, options$$1) {\n\n    var self = this || {}, resource = {};\n\n    actions = assign({},\n        Resource.actions,\n        actions\n    );\n\n    each(actions, function (action, name) {\n\n        action = merge({url: url, params: assign({}, params)}, options$$1, action);\n\n        resource[name] = function () {\n            return (self.$http || Http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options$$1 = assign({}, action), params = {}, body;\n\n    switch (args.length) {\n\n        case 2:\n\n            params = args[0];\n            body = args[1];\n\n            break;\n\n        case 1:\n\n            if (/^(POST|PUT|PATCH)$/i.test(options$$1.method)) {\n                body = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 2 arguments [params, body], got ' + args.length + ' arguments';\n    }\n\n    options$$1.body = body;\n    options$$1.params = assign({}, options$$1.params, params);\n\n    return options$$1;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\n/**\n * Install plugin.\n */\n\nfunction plugin(Vue) {\n\n    if (plugin.installed) {\n        return;\n    }\n\n    Util(Vue);\n\n    Vue.url = Url;\n    Vue.http = Http;\n    Vue.resource = Resource;\n    Vue.Promise = PromiseObj;\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function get() {\n                return options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function get() {\n                return options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function get() {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function get() {\n                var this$1 = this;\n\n                return function (executor) { return new Vue.Promise(executor, this$1); };\n            }\n        }\n\n    });\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin);\n}\n\nmodule.exports = plugin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-resource/dist/vue-resource.common.js\n// module id = 49\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 50\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Typeahead.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Typeahead.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Typeahead.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-3de1d046&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./demo/Typeahead.vue\n// module id = 51\n// module chunks = 0"],"sourceRoot":""}